/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.example.weather;

public final class R {
    public static final class anim {
        public static final int dialog_main_hide_amination=0x7f040000;
        public static final int dialog_main_show_amination=0x7f040001;
        public static final int dialog_root_hide_amin=0x7f040002;
        public static final int dialog_root_show_amin=0x7f040003;
        public static final int progress_indeterminate_animation=0x7f040004;
        public static final int snackbar_hide_animation=0x7f040005;
        public static final int snackbar_show_animation=0x7f040006;
    }
    public static final class attr {
        /**  in float button indicate if must start with animation 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int animate=0x7f01000d;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int checkBoxSize=0x7f010009;
        /**  in switche's view indicate state of view 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int checked=0x7f010008;
        /**  if true, delays calls to OnClickListeners until ripple effect ends 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int clickAfterRipple=0x7f01000f;
        /**  in float button indicate icon resource 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int iconDrawable=0x7f01000b;
        /**  in button whitch contains drawable indicate icon resource 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int iconSize=0x7f01000c;
        /**  in progress view indicate max value of progress 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int max=0x7f010003;
        /**  in progress view indicate min value of progress 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int min=0x7f010004;
        /**  in progress view indicate value of progress 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int progress=0x7f010006;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int ringWidth=0x7f010007;
        /**  set the border of the ripple frame 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rippleBorderRadius=0x7f01000e;
        /**  Color of ripple animation 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int rippleColor=0x7f010000;
        /**  Speed of ripple animation 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rippleSpeed=0x7f010001;
        /**  indicate if the slider must show number indicator 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int showNumberIndicator=0x7f010002;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int thumbSize=0x7f01000a;
        /**  in progress view indicate value of progress 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int value=0x7f010005;
    }
    public static final class color {
        /** 蜜色 
         */
        public static final int aliceblue=0x7f07002e;
        /** 亚麻色 
         */
        public static final int antiquewhite=0x7f070024;
        /** 中灰兰色 
         */
        public static final int aqua=0x7f070084;
        /** 粟色 
         */
        public static final int aquamarine=0x7f070065;
        /** 沙褐色 
         */
        public static final int azure=0x7f07002c;
        /** 烟白色 
         */
        public static final int beige=0x7f070029;
        /** 浅玫瑰色 
         */
        public static final int bisque=0x7f07000f;
        /** 海军色 
         */
        public static final int black=0x7f070092;
        /** 番木色 
         */
        public static final int blanchedalmond=0x7f07000d;
        /** 暗绿色 
         */
        public static final int blue=0x7f07008e;
        /** 暗红色 
         */
        public static final int blueviolet=0x7f07005d;
        /** 暗灰色 
         */
        public static final int brown=0x7f070052;
        /** 亮青色 
         */
        public static final int burlywood=0x7f070036;
        /** 菊兰色 
         */
        public static final int cadetblue=0x7f070073;
        /** 碧绿色 
         */
        public static final int chartreuse=0x7f070066;
        /** 茶色 
         */
        public static final int chocolate=0x7f070041;
        /** 暗桔黄色 
         */
        public static final int coral=0x7f070019;
        /** 中绿色 
         */
        public static final int cornflowerblue=0x7f070072;
        /** 柠檬绸色 
         */
        public static final int cornsilk=0x7f070009;
        /** 淡灰色 
         */
        public static final int crimson=0x7f070039;
        /** 浅绿色 
         */
        public static final int cyan=0x7f070085;
        /** 中兰色 
         */
        public static final int darkblue=0x7f070090;
        /** 深天蓝色 
         */
        public static final int darkcyan=0x7f07008b;
        /** 中粉紫色 
         */
        public static final int darkgoldenrod=0x7f070049;
        /** 亮蓝色 
         */
        public static final int darkgray=0x7f070050;
        /** 绿色 
         */
        public static final int darkgreen=0x7f07008d;
        /** 暗灰色 
         */
        public static final int darkgrey=0x7f070051;
        /** 银色 
         */
        public static final int darkkhaki=0x7f070046;
        /** 重褐色 
         */
        public static final int darkmagenta=0x7f07005b;
        /** 军兰色 
         */
        public static final int darkolivegreen=0x7f070074;
        /** 亮肉色 
         */
        public static final int darkorange=0x7f070018;
        /** 赭色 
         */
        public static final int darkorchid=0x7f070054;
        /** 暗洋红 
         */
        public static final int darkred=0x7f07005c;
        /** 紫罗兰色 
         */
        public static final int darksalmon=0x7f070033;
        /** 亮绿色 
         */
        public static final int darkseagreen=0x7f070059;
        /** 中绿宝石 
         */
        public static final int darkslateblue=0x7f070077;
        /** 橙绿色 
         */
        public static final int darkslategray=0x7f07007d;
        /** 暗瓦灰色 
         */
        public static final int darkslategrey=0x7f07007e;
        /** 中春绿色 
         */
        public static final int darkturquoise=0x7f070089;
        /** 苍绿色 
         */
        public static final int darkviolet=0x7f070056;
        /** 红橙色 
         */
        public static final int deeppink=0x7f07001d;
        /** 暗宝石绿 
         */
        public static final int deepskyblue=0x7f07008a;
        /** 石蓝色 
         */
        public static final int dimgray=0x7f07006f;
        /** 暗灰色 
         */
        public static final int dimgrey=0x7f070070;
        /** 亮海蓝色 
         */
        public static final int dodgerblue=0x7f070082;
        /** 暗金黄色 
         */
        public static final int firebrick=0x7f07004a;
        /** 雪白色 
         */
        public static final int floralwhite=0x7f070007;
        /** 海绿色 
         */
        public static final int forestgreen=0x7f070080;
        /** 深粉红色 
         */
        public static final int fuchsia=0x7f07001e;
        /** 洋李色 
         */
        public static final int gainsboro=0x7f070038;
        /** 鲜肉色 
         */
        public static final int ghostwhite=0x7f070026;
        /** 桃色 
         */
        public static final int gold=0x7f070013;
        /** 苍紫罗兰色 
         */
        public static final int goldenrod=0x7f07003b;
        /** 天蓝色 
         */
        public static final int gray=0x7f070060;
        /** 水鸭色 
         */
        public static final int green=0x7f070000;
        /** 苍宝石绿 
         */
        public static final int greenyellow=0x7f07004e;
        /** 灰色 
         */
        public static final int grey=0x7f070061;
        /** 天蓝色 
         */
        public static final int honeydew=0x7f07002d;
        /** 珊瑚色 
         */
        public static final int hotpink=0x7f07001a;
        /** 秘鲁色 
         */
        public static final int indianred=0x7f070043;
        /** 暗橄榄绿 
         */
        public static final int indigo=0x7f070075;
        /** 白色 
         */
        public static final int ivory=0x7f070003;
        /** 艾利斯兰 
         */
        public static final int khaki=0x7f07002f;
        /** 暗肉色 
         */
        public static final int lavender=0x7f070034;
        /** 海贝色 
         */
        public static final int lavenderblush=0x7f07000b;
        /** 黄绿色 
         */
        public static final int lawngreen=0x7f070067;
        /** 花白色 
         */
        public static final int lemonchiffon=0x7f070008;
        /** 黄绿色 
         */
        public static final int lightblue=0x7f07004f;
        /** 黄褐色 
         */
        public static final int lightcoral=0x7f070030;
        /** 淡紫色 
         */
        public static final int lightcyan=0x7f070035;
        /** 老花色 
         */
        public static final int lightgoldenrodyellow=0x7f070022;
        /** 蓟色 
         */
        public static final int lightgray=0x7f07003e;
        /** 中紫色 
         */
        public static final int lightgreen=0x7f070058;
        /** 亮灰色 
         */
        public static final int lightgrey=0x7f07003f;
        /** 粉红色 
         */
        public static final int lightpink=0x7f070015;
        /** 橙色 
         */
        public static final int lightsalmon=0x7f070017;
        /** 森林绿 
         */
        public static final int lightseagreen=0x7f070081;
        /** 紫罗兰蓝色 
         */
        public static final int lightskyblue=0x7f07005e;
        /** 中暗蓝色 
         */
        public static final int lightslategray=0x7f070069;
        /** 亮蓝灰 
         */
        public static final int lightslategrey=0x7f07006a;
        /** 粉蓝色 
         */
        public static final int lightsteelblue=0x7f07004c;
        /** 象牙色 
         */
        public static final int lightyellow=0x7f070004;
        /** 春绿色 
         */
        public static final int lime=0x7f070087;
        /** 中海蓝 
         */
        public static final int limegreen=0x7f07007c;
        /** 亮金黄色 
         */
        public static final int linen=0x7f070023;
        /** 紫红色 
         */
        public static final int magenta=0x7f07001f;
        /** 紫色 
         */
        public static final int maroon=0x7f070064;
        /** 暗灰色 
         */
        public static final int mediumaquamarine=0x7f070071;
        /** 蓝色 
         */
        public static final int mediumblue=0x7f07008f;
        /** 褐玫瑰红 
         */
        public static final int mediumorchid=0x7f070048;
        /** 暗紫罗兰色 
         */
        public static final int mediumpurple=0x7f070057;
        /** 青绿色 
         */
        public static final int mediumseagreen=0x7f07007b;
        /** 草绿色 
         */
        public static final int mediumslateblue=0x7f070068;
        /** 酸橙色 
         */
        public static final int mediumspringgreen=0x7f070088;
        /** 靛青色 
         */
        public static final int mediumturquoise=0x7f070076;
        /** 印第安红 
         */
        public static final int mediumvioletred=0x7f070044;
        /** 闪兰色 
         */
        public static final int midnightblue=0x7f070083;
        /** 幽灵白 
         */
        public static final int mintcream=0x7f070027;
        /** 白杏色 
         */
        public static final int mistyrose=0x7f07000e;
        /** 桔黄色 
         */
        public static final int moccasin=0x7f070010;
        /** 鹿皮色 
         */
        public static final int navajowhite=0x7f070011;
        /** 暗蓝色 
         */
        public static final int navy=0x7f070091;
        /** 红色 
         */
        public static final int oldlace=0x7f070021;
        /** 灰色 
         */
        public static final int olive=0x7f070062;
        /** 灰石色 
         */
        public static final int olivedrab=0x7f07006d;
        /** 亮粉红色 
         */
        public static final int orange=0x7f070016;
        /** 西红柿色 
         */
        public static final int orangered=0x7f07001c;
        /** 金麒麟色 
         */
        public static final int orchid=0x7f07003c;
        /** 亮珊瑚色 
         */
        public static final int palegoldenrod=0x7f070031;
        /** 暗紫色 
         */
        public static final int palegreen=0x7f070055;
        /** 亮钢兰色 
         */
        public static final int paleturquoise=0x7f07004d;
        /** 暗深红色 
         */
        public static final int palevioletred=0x7f07003a;
        /** 淡紫红 
         */
        public static final int papayawhip=0x7f07000c;
        /** 纳瓦白 
         */
        public static final int peachpuff=0x7f070012;
        /** 巧可力色 
         */
        public static final int peru=0x7f070042;
        /** 金色 
         */
        public static final int pink=0x7f070014;
        /** 实木色 
         */
        public static final int plum=0x7f070037;
        /** 火砖色 
         */
        public static final int powderblue=0x7f07004b;
        /** 橄榄色 
         */
        public static final int purple=0x7f070063;
        /** 红紫色 
         */
        public static final int red=0x7f070020;
        /** 暗黄褐色 
         */
        public static final int rosybrown=0x7f070047;
        /** 钢兰色 
         */
        public static final int royalblue=0x7f070079;
        /** 暗海兰色 
         */
        public static final int saddlebrown=0x7f07005a;
        /** 古董白 
         */
        public static final int salmon=0x7f070025;
        /** 浅黄色 
         */
        public static final int sandybrown=0x7f07002b;
        /** 暗瓦灰色 
         */
        public static final int seagreen=0x7f07007f;
        /** 米绸色 
         */
        public static final int seashell=0x7f07000a;
        /** 褐色 
         */
        public static final int sienna=0x7f070053;
        /** 中紫罗兰色 
         */
        public static final int silver=0x7f070045;
        /** 亮天蓝色 
         */
        public static final int skyblue=0x7f07005f;
        /** 深绿褐色 
         */
        public static final int slateblue=0x7f07006e;
        /** 亮蓝灰 
         */
        public static final int slategray=0x7f07006b;
        /** 灰石色 
         */
        public static final int slategrey=0x7f07006c;
        /** 黄色 
         */
        public static final int snow=0x7f070006;
        /** 青色 
         */
        public static final int springgreen=0x7f070086;
        /** 暗灰蓝色 
         */
        public static final int steelblue=0x7f070078;
        /** 亮灰色 
         */
        public static final int tan=0x7f070040;
        /** 暗青色 
         */
        public static final int teal=0x7f07008c;
        /** 淡紫色 
         */
        public static final int thistle=0x7f07003d;
        public static final int thumbColor=0x7f070001;
        /** 热粉红色 
         */
        public static final int tomato=0x7f07001b;
        /** 皇家蓝 
         */
        public static final int turquoise=0x7f07007a;
        /** 苍麒麟色 
         */
        public static final int violet=0x7f070032;
        /** 米色 
         */
        public static final int wheat=0x7f07002a;
        public static final int white=0x7f070002;
        /** 薄荷色 
         */
        public static final int whitesmoke=0x7f070028;
        /** 亮黄色 
         */
        public static final int yellow=0x7f070005;
    }
    public static final class dimen {
        /**  Default screen margins, per the Android Design guidelines. 

         Example customization of dimensions originally defined in res/values/dimens.xml
         (such as screen margins) for screens with more than 820dp of available width. This
         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively).
    
         */
        public static final int activity_horizontal_margin=0x7f080000;
        public static final int activity_vertical_margin=0x7f080001;
    }
    public static final class drawable {
        public static final int background_button=0x7f020000;
        public static final int background_button_float=0x7f020001;
        public static final int background_button_rectangle=0x7f020002;
        public static final int background_checkbox=0x7f020003;
        public static final int background_checkbox_check=0x7f020004;
        public static final int background_checkbox_uncheck=0x7f020005;
        public static final int background_progress=0x7f020006;
        public static final int background_switch_ball_uncheck=0x7f020007;
        public static final int background_transparent=0x7f020008;
        public static final int bg=0x7f020009;
        public static final int dialog_background=0x7f02000a;
        public static final int duoyun=0x7f02000b;
        public static final int float_button1_shadowp=0x7f02000c;
        public static final int float_button_shadow1=0x7f02000d;
        public static final int ic_action_new=0x7f02000e;
        public static final int ic_launcher=0x7f02000f;
        public static final int ic_reloj_max=0x7f020010;
        public static final int icon=0x7f020011;
        public static final int location=0x7f020012;
        public static final int logo=0x7f020013;
        public static final int qing=0x7f020014;
        public static final int shadow_down=0x7f020015;
        public static final int shadow_right=0x7f020016;
        public static final int shape_bottom_corner_no_top_line=0x7f020017;
        public static final int shape_no_corner_without_bottom=0x7f020018;
        public static final int shape_top_and_bottom_corner_line=0x7f020019;
        public static final int shape_top_corner_no_bottom_line=0x7f02001a;
        public static final int sprite_check=0x7f02001b;
        public static final int update1=0x7f02001c;
        public static final int update2=0x7f02001d;
        public static final int w0=0x7f02001e;
        public static final int w1=0x7f02001f;
        public static final int w10=0x7f020020;
        public static final int w13=0x7f020021;
        public static final int w14=0x7f020022;
        public static final int w15=0x7f020023;
        public static final int w16=0x7f020024;
        public static final int w17=0x7f020025;
        public static final int w19=0x7f020026;
        public static final int w2=0x7f020027;
        public static final int w3=0x7f020028;
        public static final int w30=0x7f020029;
        public static final int w31=0x7f02002a;
        public static final int w33=0x7f02002b;
        public static final int w34=0x7f02002c;
        public static final int w4=0x7f02002d;
        public static final int w5=0x7f02002e;
        public static final int w6=0x7f02002f;
        public static final int w7=0x7f020030;
        public static final int w8=0x7f020031;
        public static final int w9=0x7f020032;
        public static final int xue=0x7f020033;
        public static final int yin=0x7f020034;
        public static final int yu=0x7f020035;
    }
    public static final class id {
        public static final int LinearLayout1=0x7f0c0000;
        public static final int RelativeLayout1=0x7f0c002b;
        public static final int action_settings=0x7f0c0031;
        public static final int blue=0x7f0c000a;
        public static final int btn_update=0x7f0c0018;
        public static final int btn_xiugai=0x7f0c0004;
        public static final int buttonFloatSmall=0x7f0c0022;
        public static final int button_accept=0x7f0c0011;
        public static final int button_cancel=0x7f0c0010;
        public static final int buttonflat=0x7f0c0029;
        public static final int contentDialog=0x7f0c000c;
        public static final int contentSelector=0x7f0c0006;
        public static final int dialog_rootView=0x7f0c000b;
        public static final int edit_select_city=0x7f0c0027;
        public static final int edittext_city=0x7f0c0003;
        public static final int green=0x7f0c0009;
        public static final int imageView1=0x7f0c002f;
        public static final int imageView_weather=0x7f0c0025;
        public static final int layout_above=0x7f0c0012;
        public static final int message=0x7f0c000f;
        public static final int message_scrollView=0x7f0c000e;
        public static final int number_indicator_spinner_content=0x7f0c0026;
        public static final int red=0x7f0c0008;
        public static final int relativeLayout2=0x7f0c0021;
        public static final int rootSelector=0x7f0c0005;
        public static final int shape_bacground=0x7f0c0030;
        public static final int snackbar=0x7f0c0028;
        public static final int tableRow1=0x7f0c0019;
        public static final int tableRow2=0x7f0c001d;
        public static final int text=0x7f0c002a;
        public static final int title=0x7f0c000d;
        public static final int tv_city=0x7f0c0017;
        public static final int tv_currentcity=0x7f0c0001;
        public static final int tv_currentweather=0x7f0c0002;
        public static final int tv_date2=0x7f0c001a;
        public static final int tv_date3=0x7f0c001e;
        public static final int tv_index=0x7f0c0016;
        public static final int tv_pm=0x7f0c0024;
        public static final int tv_staticpm=0x7f0c0023;
        public static final int tv_temp1=0x7f0c0013;
        public static final int tv_temp2=0x7f0c001c;
        public static final int tv_temp3=0x7f0c0020;
        public static final int tv_weather1=0x7f0c0014;
        public static final int tv_weather2=0x7f0c001b;
        public static final int tv_weather3=0x7f0c001f;
        public static final int tv_wind1_and_fl1=0x7f0c0015;
        public static final int viewColor=0x7f0c0007;
        public static final int widget_city=0x7f0c002d;
        public static final int widget_imageButton1=0x7f0c002c;
        public static final int widget_temperature=0x7f0c002e;
    }
    public static final class layout {
        public static final int activity_main=0x7f030000;
        public static final int color_selector=0x7f030001;
        public static final int dialog=0x7f030002;
        public static final int main=0x7f030003;
        public static final int newmain=0x7f030004;
        public static final int number_indicator_spinner=0x7f030005;
        public static final int select_city_dialog=0x7f030006;
        public static final int snackbar=0x7f030007;
        public static final int widget_main=0x7f030008;
    }
    public static final class menu {
        public static final int main=0x7f0b0000;
    }
    public static final class raw {
        public static final int city=0x7f060000;
    }
    public static final class string {
        public static final int action_settings=0x7f090002;
        public static final int app_name=0x7f090000;
        public static final int hello_world=0x7f090001;
    }
    public static final class style {
        /** 
        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
    

            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        

        Base application theme for API 11+. This theme completely replaces
        AppBaseTheme from res/values/styles.xml on API 11+ devices.
    
 API 11 theme customizations can go here. 

        Base application theme for API 14+. This theme completely replaces
        AppBaseTheme from BOTH res/values/styles.xml and
        res/values-v11/styles.xml on API 14+ devices.
    
 API 14 theme customizations can go here. 
         */
        public static final int AppBaseTheme=0x7f0a0000;
        /**  Application theme. 
 All customizations that are NOT specific to a particular API-level can go here. 
         */
        public static final int AppTheme=0x7f0a0001;
    }
    public static final class xml {
        public static final int widget_provider=0x7f050000;
    }
    public static final class styleable {
        /** Attributes that can be used with a CustomAttributes.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CustomAttributes_animate com.example.weather:animate}</code></td><td> in float button indicate if must start with animation </td></tr>
           <tr><td><code>{@link #CustomAttributes_checkBoxSize com.example.weather:checkBoxSize}</code></td><td></td></tr>
           <tr><td><code>{@link #CustomAttributes_checked com.example.weather:checked}</code></td><td> in switche's view indicate state of view </td></tr>
           <tr><td><code>{@link #CustomAttributes_clickAfterRipple com.example.weather:clickAfterRipple}</code></td><td> if true, delays calls to OnClickListeners until ripple effect ends </td></tr>
           <tr><td><code>{@link #CustomAttributes_iconDrawable com.example.weather:iconDrawable}</code></td><td> in float button indicate icon resource </td></tr>
           <tr><td><code>{@link #CustomAttributes_iconSize com.example.weather:iconSize}</code></td><td> in button whitch contains drawable indicate icon resource </td></tr>
           <tr><td><code>{@link #CustomAttributes_max com.example.weather:max}</code></td><td> in progress view indicate max value of progress </td></tr>
           <tr><td><code>{@link #CustomAttributes_min com.example.weather:min}</code></td><td> in progress view indicate min value of progress </td></tr>
           <tr><td><code>{@link #CustomAttributes_progress com.example.weather:progress}</code></td><td> in progress view indicate value of progress </td></tr>
           <tr><td><code>{@link #CustomAttributes_ringWidth com.example.weather:ringWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #CustomAttributes_rippleBorderRadius com.example.weather:rippleBorderRadius}</code></td><td> set the border of the ripple frame </td></tr>
           <tr><td><code>{@link #CustomAttributes_rippleColor com.example.weather:rippleColor}</code></td><td> Color of ripple animation </td></tr>
           <tr><td><code>{@link #CustomAttributes_rippleSpeed com.example.weather:rippleSpeed}</code></td><td> Speed of ripple animation </td></tr>
           <tr><td><code>{@link #CustomAttributes_showNumberIndicator com.example.weather:showNumberIndicator}</code></td><td> indicate if the slider must show number indicator </td></tr>
           <tr><td><code>{@link #CustomAttributes_thumbSize com.example.weather:thumbSize}</code></td><td></td></tr>
           <tr><td><code>{@link #CustomAttributes_value com.example.weather:value}</code></td><td> in progress view indicate value of progress </td></tr>
           </table>
           @see #CustomAttributes_animate
           @see #CustomAttributes_checkBoxSize
           @see #CustomAttributes_checked
           @see #CustomAttributes_clickAfterRipple
           @see #CustomAttributes_iconDrawable
           @see #CustomAttributes_iconSize
           @see #CustomAttributes_max
           @see #CustomAttributes_min
           @see #CustomAttributes_progress
           @see #CustomAttributes_ringWidth
           @see #CustomAttributes_rippleBorderRadius
           @see #CustomAttributes_rippleColor
           @see #CustomAttributes_rippleSpeed
           @see #CustomAttributes_showNumberIndicator
           @see #CustomAttributes_thumbSize
           @see #CustomAttributes_value
         */
        public static final int[] CustomAttributes = {
            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
            0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007,
            0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b,
            0x7f01000c, 0x7f01000d, 0x7f01000e, 0x7f01000f
        };
        /**
          <p>
          @attr description
           in float button indicate if must start with animation 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.weather:animate
        */
        public static final int CustomAttributes_animate = 13;
        /**
          <p>This symbol is the offset where the {@link com.example.weather.R.attr#checkBoxSize}
          attribute's value can be found in the {@link #CustomAttributes} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.weather:checkBoxSize
        */
        public static final int CustomAttributes_checkBoxSize = 9;
        /**
          <p>
          @attr description
           in switche's view indicate state of view 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.weather:checked
        */
        public static final int CustomAttributes_checked = 8;
        /**
          <p>
          @attr description
           if true, delays calls to OnClickListeners until ripple effect ends 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.weather:clickAfterRipple
        */
        public static final int CustomAttributes_clickAfterRipple = 15;
        /**
          <p>
          @attr description
           in float button indicate icon resource 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.weather:iconDrawable
        */
        public static final int CustomAttributes_iconDrawable = 11;
        /**
          <p>
          @attr description
           in button whitch contains drawable indicate icon resource 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.weather:iconSize
        */
        public static final int CustomAttributes_iconSize = 12;
        /**
          <p>
          @attr description
           in progress view indicate max value of progress 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.weather:max
        */
        public static final int CustomAttributes_max = 3;
        /**
          <p>
          @attr description
           in progress view indicate min value of progress 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.weather:min
        */
        public static final int CustomAttributes_min = 4;
        /**
          <p>
          @attr description
           in progress view indicate value of progress 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.weather:progress
        */
        public static final int CustomAttributes_progress = 6;
        /**
          <p>This symbol is the offset where the {@link com.example.weather.R.attr#ringWidth}
          attribute's value can be found in the {@link #CustomAttributes} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.weather:ringWidth
        */
        public static final int CustomAttributes_ringWidth = 7;
        /**
          <p>
          @attr description
           set the border of the ripple frame 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.weather:rippleBorderRadius
        */
        public static final int CustomAttributes_rippleBorderRadius = 14;
        /**
          <p>
          @attr description
           Color of ripple animation 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.example.weather:rippleColor
        */
        public static final int CustomAttributes_rippleColor = 0;
        /**
          <p>
          @attr description
           Speed of ripple animation 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.weather:rippleSpeed
        */
        public static final int CustomAttributes_rippleSpeed = 1;
        /**
          <p>
          @attr description
           indicate if the slider must show number indicator 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.weather:showNumberIndicator
        */
        public static final int CustomAttributes_showNumberIndicator = 2;
        /**
          <p>This symbol is the offset where the {@link com.example.weather.R.attr#thumbSize}
          attribute's value can be found in the {@link #CustomAttributes} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.weather:thumbSize
        */
        public static final int CustomAttributes_thumbSize = 10;
        /**
          <p>
          @attr description
           in progress view indicate value of progress 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.weather:value
        */
        public static final int CustomAttributes_value = 5;
    };
}
